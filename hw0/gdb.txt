  Load up your wc executable in gdb with a single input le command line argument, set a breakpoint at wc, and run to there.  Take a look at the stack using where or backtrace (bt).

 

where
#0  wc (ofile=0x0, infile=0x601010, inname=0x7fffffffe976 "aa") at wc.c:7
#1  0x00000000004006b2 in main (argc=2, argv=0x7fffffffe768) at wc.c:43


While you are looking through gdb, think about the following questions and put your answers in the  gdb.txt.
 What is the value of infile? (hint: print infile)                                                          $1 = (FILE *) 0x601010
 What is the object referenced by infile? (hint: *infile)
 What is the value of ofile? How is it different from that of infile? Why?
 What is the address of the function wc?                                                                $4 = {void (FILE *, FILE *, char *)} 0x4005a4 <wc>
 Try info stack. Explain what you see.

        #0  wc (ofile=0x0, infile=0x601010, inname=0x7fffffffe976 "aa") at wc.c:7
       #1  0x00000000004006b2 in main (argc=2, argv=0x7fffffffe768) at wc.c:43
 Try info frame. Explain what you see.

      Stack level 0, frame at 0x7fffffffe660:
      rip = 0x4005b9 in wc (wc.c:7); saved rip 0x4006b2
     called by frame at 0x7fffffffe690
     source language c.
     Arglist at 0x7fffffffe650, args: ofile=0x0, infile=0x601010, inname=0x7fffffffe976 "aa"
     Locals at 0x7fffffffe650, Previous frame's sp is 0x7fffffffe660
     Saved registers:
      rbp at 0x7fffffffe650, rip at 0x7fffffffe658


 Try info registers. Which registers are holding aspects of the program that you recognize?

rax            0x601010 6295568
rbx            0x0 0
rcx            0x7ffff7b242d0 140737349042896
rdx            0x7fffffffe976 140737488349558
rsi            0x601010 6295568
rdi            0x0 0
rbp            0x7fffffffe650 0x7fffffffe650
rsp            0x7fffffffe610 0x7fffffffe610
r8             0x4007c6 4196294
r9             0x0 0
r10            0x0 0
r11            0x246 582
r12            0x4004c0 4195520
r13            0x7fffffffe760 140737488349024
r14            0x0 0
r15            0x0 0
rip            0x4005b9 0x4005b9 <wc+21>
eflags         0x202 [ IF ]
---Type <return> to continue, or q <return> to quit---
cs             0x33 51
ss             0x2b 43
ds             0x0 0
es             0x0 0
fs             0x0 0
gs             0x0 0

5.
